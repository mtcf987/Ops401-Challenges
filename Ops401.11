#!/usr/bin/env python3

# Author:        Malena Tomlin
# Script:        Network Security Tool with Scapy Part 1 of 3
# Revision Date: 6/17/2024

import csv
from scapy.all import IP, TCP, sr1, sr
from tqdm import tqdm
import platform

def scan_port(ip: str, port: int) -> tuple[int, str]:
    """Scan a single port on a target IP."""
    try:
        pkt = IP(dst=ip) / TCP(dport=port, flags="S")
        resp = sr1(pkt, timeout=2, verbose=0)

        if resp is None:
            return port, "Filtered"
        elif resp.haslayer(TTCP):
            tcp_layer = resp.getlayer(TCP)
            if tcp_layer.flags == 0x12:  # SYN-ACK
                sr(IP(dst=ip) / TCP(dport=port, flags="R"), timeout=1, verbose=0)
                return port, "Open"
            elif tcp_layer.flags == 0x14:  # RST-ACK
                return port, "Closed"
        return port, "Unknown"
    except KeyboardInterrupt:
        print("\nScan interrupted by user.")
        return port, "Interrupted"

def export_results(scan_results: list[tuple[int, str]], filename: str):
    """Export scan results to a CSV or Excel file based on the operating system."""
    if platform.system() == "Windows":
        try:
            import pandas as pd
            df = pd.DataFrame(scan_results, columns=["Port", "Status"])
            df.to_excel(f"{filename}.xlsx", index=False)
        except ImportError:
            print("Pandas not installed. Please install it to export results as Excel.")
    else:
        with open(f"{filename}.csv", mode='w', newline='') as file:
            writer = csv.writer(file)
            writer.writerow(["Port", "Status"])
            writer.writerows(scan_results)

def main():
    """Main function to handle user inputs and initiate the port scanning."""
    try:
        target_ip = input("Enter target IP: ").strip()
        start_port = int(input("Enter start port: ").strip())
        end_port = int(input("Enter end port: ").strip())
        scan_results = []

        for port in tqdm(range(start_port, end_port + 1), desc="Scanning ports"):
            result = scan_port(target_ip, port)
            scan_results.append(result)
            if result[1] == "Interrupted":
                break

        export_results(scan_results, "scan_results")
        print("Scan results exported successfully.")

    except KeyboardInterrupt:
        print("\nOperation cancelled by user.")
    except ValueError:
        print("\nInvalid input. Please enter valid numeric values for ports.")
    except Exception as e:
        print(f"\nAn unexpected error occurred: {e}")

if __name__ == "__main__":
    main()
